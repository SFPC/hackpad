Teachers Mini-School Signup

December 4th 6:00-8:00
---------------------------------------------

Hi, here are a few viewing reading materials towards next class, spanning from straight-on MOOC to educational doodles. 

We're going to have an open discussion about what it means to have these materials available to educators, students, and the casually-curious. How is life different (if at all) with these at hand?

Bret Victor: 
The future of programming Video; http://vimeo.com/71278954
Additional context and learning materials: http://worrydream.com/dbx/

Vi Hart Video channel: https://www.youtube.com/user/Vihart
Watch a few, pick your favorites

Dan Shifman's online Processing tutorial (interactive) 
http://hello.processing.org/

Kahn academy, intro to algorithms: 
https://www.khanacademy.org/computing/computer-science/algorithms

Guests: 
 * Tega Brain
 * Sarah GP

Full Time:
 * Nathan Rosenberg
 * Zan
 * Lauren Gardner 
 * Todd Anderson


November 26th 6:00-8:00
---------------------------------------------
Guests: 
Tega Brain

Full Time:
Nathan Rosenberg I'm in too
Zan (can't make it)
Lauren Gardner (I'm in)
Todd Anderson (can't make it)

November 12th 6:00-8:00
---------------------------------------------
Get Amit up to speed on your session from last week, we'll recap what we've learned so far and set up a plan towards the last group of sessions. We'll also take a look at work from Bret Victor, Vi Heart, and Dan Shifman, and discuss their ideas and teaching methodologies. 

Guests:
- Christo

Full Time:
Zan Armstrong
Nathan Rosenberg
Jonas Jongejan
 * Wont participate tomorrow, i better take my self off the full time, since i'm not
Lauren Gardner
 * Todd Anderson 

November 11th 6:00-8:00
-----------------------------------
At Todd's Studio, Amit out of town

October 29th 6:00-8:00
-----------------------------------
 * SPECIAL LOCATION: FIFTYTHREE OFFICE at 60 HUNDSON, off Thomas street (don't use google, it misdirects)

Guests:
Zan Armstrong

Full Time:
Nathan Rosenberg
Jonas Jongejan
Lauren Gardner
Todd Anderson
Meghana Khandekar

October 22nd 6:30-8:30
------------------------------------
Building upon last week's session, this week we'll examine how basic code literacy and art literacy can be introduced early on in the learning process. We'll also expand on your individual threads from last week. 

 * Guests this week (2 spots):
- Zan
- Meghana Khandekar 

Notes:
Discussions around teaching examples for the first class focused on getting someone excited to code. 
 * Showing them that anything is possible and there is a brute-force way to get it done which is a good place to start but by learning to program you can get your ideas on screen faster and with less effort. e.g. 10 lines example, can draw 1 line 10 times or use a while loop to automate.
Next steps: teaching color or movement. (found that movement was more exciting for kids to learn vs color)
Teaching color is a great way to introduce bits (16 bit, 32 bit, 64 bit color palate) ex:
 * for a 32 bit color palate imagine 32 empty slots you are going to fill in with vales that will result in a color. 
 * The color palate is made up of 4 channels, RGBA (red, green, blue & alpha)
   * why is it green and not yellow? Nathan explains and shares a link 2
 * The 32 buckets are divided among the 4 channels giving each value 8 buckets (or bits) of its own. What would go in these? (in the UI the numbers go up to 256, why?)
   * can talk about counting in binary here
 * The 32 bit color is actually four 8-bit colors divided among RGBA
   * Lauren Gardner nice to create a visual for this
 * Now introduce 'stroke' with color in the processing example

 * Homework
What puzzles can you give someone to solve that will help them 'level up' their knowledge on a subject?
 * should be no more then 20 lines of code
 * should have no 'exact' answer but should get them 'close' to a solution. should cause them to reflect and research
   * ex: change numbers in programs to be between 0-1

 * Lauren's homework (electronics puzzles)
 * how electricity works
   * IONS = atoms with a +/- charge
     * atoms normally have equal # of electrons giving them no net electrical charge (0)
     * if a normal atom (0) loses an electron (-) it then has a net positive (+) charge and is called a "positive ion"
     * when a stray electron (-) joins with a normal atom (0) it has a net negative charge (-) and is called a "negative ion"
     * like charges repel and unlike charges attract (*this may be bad dating advice)
               * *
       * puzzle - draw an example of what you think a neutral, positive and a negative ion look like
   * free electrons (-)
     * can move at high speed through metals, gases and a vacuum or they can just hang out - these are "resting electrons". resting electrons move towards clusters of positive IONS
     * resting electrons generate static electrical charge
     * moving electrons = electrical current! *shock*
   * Direct Current - it's called 'direct' because it only flows in one direction
     * current (I) - the quantity of electrons passing a given point. measured in ampere
     * voltage (V or E) - electrical pressure or force. sometimes called 'potential voltage drop'. 
       * if current is the amount of water flowing through a pipe then voltage is the water pressure
     * power (P) - the 'work' performed by an electrical current is called power. units of power are measured by watts.
       * calculate the power (P) of a direct current by multiplying voltage * current
       * here's a crazy calculator for more then you'll ever need
     * resistance (R) - will resist (to some degree) the flow of current. the unit of resistance is measured by OHM
     * puzzle: using the water analogy, draw a picture with what 'current', 'voltage'. 'power' and 'resistance' would look like
     * puzzle: using this example of a simple circuit, label where the 'potential voltage' is and draw which way the current flows
     * *
 * components: what they are, what they do and what do they look like
 * tools: what are they for and how to use them
 * integrated circuits: 


October 15th
------------------
In this session we'll be discussing last week's assignment and then deconstructing the first 15 minutes of how I teach total beginners to code. By doing so, we'll tease the fundamental ideas that we feel should persist through the teaching of the craft to those who wish to code as a creative act.

I would like to sign up as a full time participant (guaranteed space for you in all classes):
Nathan Rosenberg
Jonas Jongejan
lauren Gardner 
Todd Anderson 

I would like to sign up for this specific class (if there's space available):
Zan Armstrong 

